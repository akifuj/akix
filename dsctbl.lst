     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_load_gdtr
     7 00000000                                 	EXTERN	_load_idtr
     8 00000000                                 	EXTERN	_asm_inthandler20
     9 00000000                                 	EXTERN	_asm_inthandler21
    10 00000000                                 	EXTERN	_asm_inthandler27
    11 00000000                                 	EXTERN	_asm_inthandler2c
    12 00000000                                 [FILE "dsctbl.c"]
    13                                          [SECTION .text]
    14 00000000                                 	GLOBAL	_init_gdtidt
    15 00000000                                 _init_gdtidt:
    16 00000000 55                              	PUSH	EBP
    17 00000001 89 E5                           	MOV	EBP,ESP
    18 00000003 53                              	PUSH	EBX
    19 00000004 BB 0000FFFE                     	MOV	EBX,65534
    20 00000009                                 L6:
    21 00000009 6A 00                           	PUSH	0
    22 0000000B 6A 00                           	PUSH	0
    23 0000000D 6A 00                           	PUSH	0
    24 0000000F 68 00270008                     	PUSH	2555912
    25 00000014 E8 000000D0                     	CALL	_set_segmdesc
    26 00000019 83 C4 10                        	ADD	ESP,16
    27 0000001C 4B                              	DEC	EBX
    28 0000001D 79 EA                           	JNS	L6
    29 0000001F 68 00004092                     	PUSH	16530
    30 00000024 BB 000000FE                     	MOV	EBX,254
    31 00000029 6A 00                           	PUSH	0
    32 0000002B 6A FF                           	PUSH	-1
    33 0000002D 68 00270008                     	PUSH	2555912
    34 00000032 E8 000000B2                     	CALL	_set_segmdesc
    35 00000037 68 0000409A                     	PUSH	16538
    36 0000003C 68 00280000                     	PUSH	2621440
    37 00000041 68 0007FFFF                     	PUSH	524287
    38 00000046 68 00270010                     	PUSH	2555920
    39 0000004B E8 00000099                     	CALL	_set_segmdesc
    40 00000050 83 C4 20                        	ADD	ESP,32
    41 00000053 68 00270000                     	PUSH	2555904
    42 00000058 68 0000FFFF                     	PUSH	65535
    43 0000005D E8 [00000000]                   	CALL	_load_gdtr
    44 00000062 58                              	POP	EAX
    45 00000063 5A                              	POP	EDX
    46 00000064                                 L11:
    47 00000064 6A 00                           	PUSH	0
    48 00000066 6A 00                           	PUSH	0
    49 00000068 6A 00                           	PUSH	0
    50 0000006A 68 0026F808                     	PUSH	2553864
    51 0000006F E8 000000BF                     	CALL	_set_gatedesc
    52 00000074 83 C4 10                        	ADD	ESP,16
    53 00000077 4B                              	DEC	EBX
    54 00000078 79 EA                           	JNS	L11
    55 0000007A 68 0026F800                     	PUSH	2553856
    56 0000007F 68 000007FF                     	PUSH	2047
    57 00000084 E8 [00000000]                   	CALL	_load_idtr
    58 00000089 68 0000008E                     	PUSH	142
    59 0000008E 6A 10                           	PUSH	16
    60 00000090 68 [00000000]                   	PUSH	_asm_inthandler20
    61 00000095 68 0026F900                     	PUSH	2554112
    62 0000009A E8 00000094                     	CALL	_set_gatedesc
    63 0000009F 68 0000008E                     	PUSH	142
    64 000000A4 6A 10                           	PUSH	16
    65 000000A6 68 [00000000]                   	PUSH	_asm_inthandler21
    66 000000AB 68 0026F908                     	PUSH	2554120
    67 000000B0 E8 0000007E                     	CALL	_set_gatedesc
    68 000000B5 83 C4 28                        	ADD	ESP,40
    69 000000B8 68 0000008E                     	PUSH	142
    70 000000BD 6A 10                           	PUSH	16
    71 000000BF 68 [00000000]                   	PUSH	_asm_inthandler27
    72 000000C4 68 0026F938                     	PUSH	2554168
    73 000000C9 E8 00000065                     	CALL	_set_gatedesc
    74 000000CE 68 0000008E                     	PUSH	142
    75 000000D3 6A 10                           	PUSH	16
    76 000000D5 68 [00000000]                   	PUSH	_asm_inthandler2c
    77 000000DA 68 0026F960                     	PUSH	2554208
    78 000000DF E8 0000004F                     	CALL	_set_gatedesc
    79 000000E4 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
    80 000000E7 C9                              	LEAVE
    81 000000E8 C3                              	RET
    82 000000E9                                 	GLOBAL	_set_segmdesc
    83 000000E9                                 _set_segmdesc:
    84 000000E9 55                              	PUSH	EBP
    85 000000EA 89 E5                           	MOV	EBP,ESP
    86 000000EC 53                              	PUSH	EBX
    87 000000ED 8B 55 0C                        	MOV	EDX,DWORD [12+EBP]
    88 000000F0 8B 4D 10                        	MOV	ECX,DWORD [16+EBP]
    89 000000F3 8B 5D 08                        	MOV	EBX,DWORD [8+EBP]
    90 000000F6 8B 45 14                        	MOV	EAX,DWORD [20+EBP]
    91 000000F9 81 FA 000FFFFF                  	CMP	EDX,1048575
    92 000000FF 76 08                           	JBE	L17
    93 00000101 C1 EA 0C                        	SHR	EDX,12
    94 00000104 0D 00008000                     	OR	EAX,32768
    95 00000109                                 L17:
    96 00000109 66 89 13                        	MOV	WORD [EBX],DX
    97 0000010C 88 43 05                        	MOV	BYTE [5+EBX],AL
    98 0000010F C1 EA 10                        	SHR	EDX,16
    99 00000112 C1 F8 08                        	SAR	EAX,8
   100 00000115 83 E2 0F                        	AND	EDX,15
   101 00000118 66 89 4B 02                     	MOV	WORD [2+EBX],CX
   102 0000011C 83 E0 F0                        	AND	EAX,-16
   103 0000011F C1 F9 10                        	SAR	ECX,16
   104 00000122 09 C2                           	OR	EDX,EAX
   105 00000124 88 4B 04                        	MOV	BYTE [4+EBX],CL
   106 00000127 88 53 06                        	MOV	BYTE [6+EBX],DL
   107 0000012A C1 F9 08                        	SAR	ECX,8
   108 0000012D 88 4B 07                        	MOV	BYTE [7+EBX],CL
   109 00000130 5B                              	POP	EBX
   110 00000131 5D                              	POP	EBP
   111 00000132 C3                              	RET
   112 00000133                                 	GLOBAL	_set_gatedesc
   113 00000133                                 _set_gatedesc:
   114 00000133 55                              	PUSH	EBP
   115 00000134 89 E5                           	MOV	EBP,ESP
   116 00000136 53                              	PUSH	EBX
   117 00000137 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
   118 0000013A 8B 45 10                        	MOV	EAX,DWORD [16+EBP]
   119 0000013D 8B 5D 14                        	MOV	EBX,DWORD [20+EBP]
   120 00000140 8B 4D 0C                        	MOV	ECX,DWORD [12+EBP]
   121 00000143 66 89 42 02                     	MOV	WORD [2+EDX],AX
   122 00000147 88 5A 05                        	MOV	BYTE [5+EDX],BL
   123 0000014A 66 89 0A                        	MOV	WORD [EDX],CX
   124 0000014D 89 D8                           	MOV	EAX,EBX
   125 0000014F C1 F8 08                        	SAR	EAX,8
   126 00000152 C1 F9 10                        	SAR	ECX,16
   127 00000155 88 42 04                        	MOV	BYTE [4+EDX],AL
   128 00000158 66 89 4A 06                     	MOV	WORD [6+EDX],CX
   129 0000015C 5B                              	POP	EBX
   130 0000015D 5D                              	POP	EBP
   131 0000015E C3                              	RET
